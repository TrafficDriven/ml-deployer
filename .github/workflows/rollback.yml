name: Rollback

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment'
        required: false
        default: production
        type: string
      helm_chart_file:
        description: 'Helm Chart'
        required: false
        default: 'deployments/kubernetes/helm/chart'
        type: string
      monorepo_application_name:
        description: 'Application Name'
        required: false
        default: ''
        type: string
    secrets:
      token:
        description: 'Push Token'
        required: true
      slack_bot_token:
        description: 'Slack Token'
        required: true
      slack_channel_id:
        description: 'Slack Channel ID.'
        required: false
        default: "deployments"

jobs:
  rollback:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.environment }}
        path: destiny-manifest
        token: ${{ secrets.token }}

    - name: Preparing to rollback
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.token }}
      run: |-
        export APP_NAME=${{ inputs.monorepo_application_name }}
        export APP_FOLDER_NAME=${{ inputs.monorepo_application_folder }}
        export APP_REPO_NAME=${{github.repository}}
        export APP_REPO_NAME="${APP_REPO_NAME/TrafficDriven\//}"
        if [ ! -z "$APP_NAME" ]
        then
          export APP_REPO_NAME="${APP_NAME}"
        fi

        echo "APP_REPO_NAME=$(echo ${APP_NAME})" >> $GITHUB_ENV
        echo "APP_FOLDER_NAME=$(echo ${APP_FOLDER_NAME})" >> $GITHUB_ENV

        DIR="destiny-manifest${APP_FOLDER_NAME}"

        if [ ! -d "$DIR" ]; then
          echo "no ${{ inputs.environment }} branch found. Can't rollback"
          exit 1
        fi

        cd destiny-manifest
        source "${APP_FOLDER_NAME}build-tags"
        echo "COMMIT_ID_ROLLBACK=$(echo $COMMIT_ID_ROLLBACK)" >> $GITHUB_ENV

        if [[ -z "${COMMIT_ID_ROLLBACK}" ]]; then
          echo "no COMMIT_ID_ROLLBACK found. Can't rollback"
          exit 1
        fi

        cat <<-EOF > "${APP_FOLDER_NAME|build-tags"
        export APP_NAME="$APP_NAME"
        export IMAGE_TAG="$COMMIT_ID_ROLLBACK"
        export COMMIT_ID_ROLLBACK=""
        export COMMIT_ID="$COMMIT_ID_ROLLBACK"
        export BRANCH="$BRANCH"
        export ACTION="rollback"
        EOF

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ env.COMMIT_ID_ROLLBACK }}
        path: code-source
        token: ${{ secrets.token }}

    - name: Helming the rollback commit_id code
      shell: bash
      run: |-
        cd code-source
        helm template $APP_FOLDER_NAME${{ inputs.helm_chart_file }} --set app.targetRevision=${{ inputs.environment }} --set app.image.pullPolicy=Always --set app.image.tag=${{ env.COMMIT_ID_ROLLBACK }} --set app.version=${{ env.COMMIT_ID_ROLLBACK }} > "../destiny-manifest/${APP_FOLDER_NAME}manifest/manifest.yaml"

    - name: Pushing manifest to ${{ inputs.environment }} branch
      if: ${{ false }}
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.token }}
      run: |-
        cd destiny-manifest
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git commit -m "rolling back in ${{ inputs.environment }}" --no-verify
        git push --set-upstream origin ${{ inputs.environment }}

    - name: Post Slack Notification
      if: ${{ false }}
      uses: slackapi/slack-github-action@v1.24.0
      with:
        channel-id: ${{ secrets.slack_channel_id }}
        slack-message: '*${{ github.actor }}* is rolling back *${{ env.APP_REPO_NAME}}* in *${{ inputs.environment }}* :tada:'
      env:
        SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}

    - name: Slack notification rehearse
      shell: bash
      run: |-
        cat "${APP_FOLDER_NAME}build-tags"
        echo "${{ github.actor }} is rolling back ${{ env.APP_REPO_NAME}} in ${{ inputs.environment }} :tada:"
