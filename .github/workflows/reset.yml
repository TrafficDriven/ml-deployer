name: Reset

on:
  workflow_call:
    inputs:
      helm_chart_file:
        description: 'Helm Chart'
        required: false
        default: 'deployments/kubernetes/helm/chart'
        type: string
    secrets:
      token:
        description: 'Push Token'
        required: true
jobs:
  # Deploy Branch to Kubernetes Cluster
  rollback:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: stage
        path: destiny-manifest-stage
        token: ${{ secrets.token }}

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: production
        path: destiny-manifest-production
        token: ${{ secrets.token }}

    - name: Preparing to rollback
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.token }}
      run: |-
        DIR="destiny-manifest-production"

        if [ ! -d "$DIR" ]; then
          echo "no production branch found. Can't rollback"
          exit 1
        fi

        cd destiny-manifest-production
        source "build-tags"
        echo "COMMIT_ID_PRODUCTION=$(echo $COMMIT_ID)" >> $GITHUB_ENV

        cd ../destiny-manifest-staging

        cat <<-EOF > "build-tags"
        export APP_NAME="$APP_NAME"
        export IMAGE_TAG="$COMMIT_ID_PRODUCTION"
        export COMMIT_ID_ROLLBACK=""
        export COMMIT_ID="$COMMIT_ID_PRODUCTION"
        export BRANCH="reset"
        EOF

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ env.COMMIT_ID_PRODUCTION }}
        path: code-source
        token: ${{ secrets.token }}

    - name: Helming the rollback commit_id code
      shell: bash
      run: |-
        cd code-source
        helm template ${{ inputs.helm_chart_file }} --set app.targetRevision=${{ inputs.environment }} --set app.image.pullPolicy=Always --set app.image.tag=${{ env.COMMIT_ID_PRODUCTION }} --set app.version=${{ env.COMMIT_ID_PRODUCTION }} > ../destiny-manifest/manifest/manifest.yaml

    - name: Pushing manifest to ${{ inputs.environment }} branch
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.token }}
      run: |-
        cd destiny-manifest-staging
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add .
        git commit -m "reset ${{ inputs.environment }}" --no-verify
        git push --set-upstream origin ${{ inputs.environments }}

